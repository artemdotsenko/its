<?php
/**
 * @file
 * Code for the ITS Cities feature.
 */

include_once 'includes/its_cities.helper.inc';

// City vocablurary name.
define('ITS_CITIES_VOC_NAME', 'city');

/**
 * Implements hook_ctools_plugin_directory().
 *
 * It simply tells panels where to find the .inc files that define various
 * args, contexts, content_types.
 */
function its_cities_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return "plugins/$plugin";
  }
}

/**
 * Implements hook_preprocess_html().
 */
function its_cities_preprocess_html(&$vars) {
  $id = its_cities_get_current_city();
  if ($id) {
    $code = its_cities_get_city_code($id);
    $vars['classes_array'][] = $code . '-city';
  }
}

/**
 * Implements hook_page_build().
 */
function its_cities_page_build(&$page) {
  // For not admin path.
  if (!path_is_admin(current_path())) {
    $term = menu_get_object('taxonomy_term', 2);
    if ($term && $term->vocabulary_machine_name == ITS_CITIES_VOC_NAME) {
      its_cities_set_city($term->tid);
      drupal_goto('<front>');
    }
  }
}

/**
 * Implements hook_block_info().
 */
function its_cities_block_info() {
  $blocks['city_selector'] = array(
    'info' => t('City Selector'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function its_cities_block_view($delta = '') {
  global $language;
  $block = array();

  switch ($delta) {
    case 'city_selector':
      $cities = array();
      its_cities_switch_city_language();
      $voc = taxonomy_vocabulary_machine_name_load(ITS_CITIES_VOC_NAME);
      $terms = entity_load('taxonomy_term', FALSE, array('vid' => $voc->vid));
      $cur_tid = its_cities_get_current_city();
      $current = its_cities_get_city_name($cur_tid);

      foreach ($terms as $term) {
        // Skip current.
        if ($term->tid != $cur_tid) {
          if ($language->language == $term->language) {
            $cities[] = l($term->name, 'taxonomy/term/' . $term->tid);
          }
        }
      }
      $block['subject'] = '';
      $block['content'] = '<div class="city-dropdown">';
      $name = '<span class="glyphicon glyphicon-map-marker"></span>';
      $name .= $current;
      $name .= '<span class="glyphicon glyphicon-chevron-down chevron-down"></span>';
      $block['content'] .= l(
        $name,
        '',
        array(
          'external' => TRUE,
          'fragment' => NULL,
          'html' => TRUE,
          'attributes' => array(
            'class' => array('dropdown-toggle'),
            'id' => 'cityDropdown',
            'data-toggle' => 'dropdown',
            'aria-haspopup' => 'true',
            'aria-expanded' => 'false',
          ),
        )
      );
      $block['content'] .= theme('item_list', array(
        'items' => $cities,
        'attributes' => array(
          'class' => array('dropdown-menu'),
          'aria-labelledby' => 'cityDropdown',
        ),
      ));
      $block['content'] .= '</div>';
      break;

  }
  return $block;
}

/**
 * Implementats hook_views_pre_view().
 */
function its_cities_views_pre_view(&$view) {
  $views = array(
    'its_articles',
    'its_class',
    'its_events',
    'its_partners',
    'its_phones',
    'its_reviews',
    'its_subject',
  );
  if (in_array($view->name, $views)) {
    if (isset($view->display['default']->handler->options['filters']['field_city_tid'])) {
      $city = its_cities_get_current_city();
      foreach ($view->display as $key => $value) {
        $view->display[$key]->handler->options['filters']['field_city_tid']['value'] = array(
          $city => $city,
        );
      }
    }
  }
}

/**
 * Implements hook_node_presave().
 */
function its_cities_node_presave($node) {
  if (isset($node->field_city)) {
    $voc = taxonomy_vocabulary_machine_name_load(ITS_CITIES_VOC_NAME);
    $terms = entity_load('taxonomy_term', FALSE, array('vid' => $voc->vid));

    $tids = field_get_items('node', $node, 'field_city');
    foreach ($tids as $key => $value) {
      $code = its_cities_get_city_code($value['tid']);
      foreach ($terms as $term) {
        $term_code = its_cities_get_city_code($term->tid);
        if ($term->language == $node->language && $code == $term_code) {
          $node->field_city[LANGUAGE_NONE][$key]['tid'] = $term->tid;
        }
      }
    }
  }
}

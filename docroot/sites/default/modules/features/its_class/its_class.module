<?php
/**
 * @file
 * Code for the ITS Class feature.
 */

include_once 'its_class.features.inc';

/**
 * Implements hook_preprocess_views_view_fields().
 */
function its_class_preprocess_views_view_fields(&$vars) {
  global $language;

  if ($vars['view']->name == 'its_teacher' && !empty($vars['view']->result)) {
    $subjects = NULL;
    foreach ($vars['view']->result as $result) {
      $q = db_select('node', 'n');
      $q->join('field_data_field_people_teacher', 't', 'n.nid = t.entity_id');

      $q->fields('n', array('nid', 'title'))
        ->condition('n.type', 'subject')
        ->condition('n.status', NODE_PUBLISHED)
        ->condition('n.language', $language->language)
        ->condition('t.field_people_teacher_uid', $result->uid);
      $nids = $q->execute()
        ->fetchAllKeyed();

      $subjects = NULL;
      $sub = array();
      foreach ($nids as $nid => $title) {
        $sub[] = l($title, 'node/' . $nid);
      }
      if (!empty($sub)) {
        $subjects = implode(', ', $sub);
      }
    }
    if ($subjects) {
      $value = theme('html_tag', array(
        'element' => array(
          '#tag' => 'div',
          '#attributes' => array(
            'class' => array('field-content')
          ),
          '#value' => t('Teacher of: !subjects', array('!subjects' => $subjects)),
        ),
      ));
      $vars['fields']['field_people_full_name']->wrapper_suffix .= theme('html_tag', array(
        'element' => array(
          '#tag' => 'div',
          '#attributes' => array(
            'class' => array('views-field', 'views-field-field-people-position'),
          ),
          '#value' => $value,
        ),
      ));
    }
  }
}

/**
 * Implements hook_preprocess_views_bootstrap_table_plugin_style().
 */
function its_class_preprocess_views_bootstrap_table_plugin_style(&$vars) {
  $view = $vars['view'];
  if ($view->name == 'its_subject') {
    switch ($view->current_display) {
      case 'panel_pane_full_package':
      case 'panel_pane_full_package_subject':
      case 'attachment_custom_package':
        $vars['total'] = 0;
        foreach ($view->result as $key => $result) {
          $vars['total'] += $result->field_field_subject_price[0]['raw']['amount'];
          $vars['field_attributes']['field_subject_price'][$key] = array(
            'data-price' => $vars['total'] / 100,
          );
        }
        $vars['total_formated'] = commerce_currency_format($vars['total'], 'UAH');
        $vars['four_price'] = commerce_currency_format($vars['total'] / 4, 'UAH');
        break;

      default:
        # code...
        break;
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function its_class_form_alter(&$form, &$form_state, $form_id) {
  if (strpos($form_id, 'webform_client_form_') === 0) {
    $names = array('zapisatsya_na_kurs_ua', 'apply_subject', 'apply_class');
    if (in_array($form['#node']->webform['machine_name'], $names)) {
      $subject = menu_get_object();
      $form['submitted']['payment']['#access'] = FALSE;
      if ($subject && $subject->type == 'subject') {
        $price = field_get_items('node', $subject, 'field_subject_price');
        $price = isset($price[0]) ? $price[0] : NULL;

        if ($price) {
          $full_price = commerce_currency_format($price['amount'], $price['currency_code']);
          $part_price = commerce_currency_format($price['amount'] / 4, $price['currency_code']);

          $form['submitted']['payment']['#options'] = array(
            'full' => t('One time payment') . ' ' . $full_price,
            'part' => t('Pay in parts') . ' 4 x ' . $part_price,
          );
          $form['submitted']['payment']['#access'] = TRUE;
        }
      }
    }
  }
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function its_class_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return "plugins/$plugin";
  }
}
